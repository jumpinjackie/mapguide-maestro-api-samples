@model SampleViewerModel
@using Microsoft.Extensions.Options
@{
    Layout = null;
}
@inject IOptions<AppSettings> Settings
<!DOCTYPE html>
<html>
<head>
    <title>@Model.Title</title>
    <link rel="stylesheet" href="~/dist/viewer.css" type="text/css" />
    <!-- NOTE: If you don't care about IE, you can remove/comment the es6-promise script reference and Object.assign polyfill below -->
    <script type="text/javascript" src="~/dist/es6-promise.auto.min.js"></script>
    <script type="text/javascript">
        if (typeof Object.assign != 'function') {
            // Must be writable: true, enumerable: false, configurable: true
            Object.defineProperty(Object, "assign", {
                value: function assign(target, varArgs) { // .length of function is 2
                    'use strict';
                    if (target == null) { // TypeError if undefined or null
                        throw new TypeError('Cannot convert undefined or null to object');
                    }

                    var to = Object(target);

                    for (var index = 1; index < arguments.length; index++) {
                        var nextSource = arguments[index];

                        if (nextSource != null) { // Skip over if undefined or null
                            for (var nextKey in nextSource) {
                                // Avoid bugs when hasOwnProperty is shadowed
                                if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {
                                    to[nextKey] = nextSource[nextKey];
                                }
                            }
                        }
                    }
                    return to;
                },
                writable: true,
                configurable: true
            });
        }
    </script>
    <script type="text/javascript" src="~/dist/viewer.js" charset="utf-8"></script>
    <style type="text/css">

        html, body, #map {
            padding: 0;
            margin: 0;
            font: 10pt Verdana, sans-serif;
        }

        #map {
            position: absolute;
            left: 0;
            right: 0;
            top: 0;
            bottom: 0;
        }

        .component-mouse-coordinates, .component-scale-display, .component-selected-feature-count, .component-view-size {
            background-color: #f0f0f0;
        }

        .ajax-sidebar-panel {
            position: absolute;
            left: 0;
            right: 0;
            top: 0;
            bottom: 0;
        }

        .ajax-sidebar-panel-heading {
            position: absolute;
            left: 0;
            right: 0;
            top: 0;
            height: 26px;
            padding: 3px;
            padding-left: 6px;
            border-bottom: 1px solid #f0f0f0;
        }

        .ajax-sidebar-panel-body {
            position: absolute;
            left: 0;
            right: 0;
            top: 26px;
            bottom: 0;
            overflow-y: auto;
        }
    </style>
</head>
<body>
    <div id="map"></div>
    <script type="text/javascript">
        var el = document.getElementById("map");
        var viewer = new MapGuide.Application();
        viewer.mount(el, {
            layout: "ajax-viewer",
            externalBaseLayers: [
                { name: "OpenStreetMap", kind: "OSM" }
            ],
            agent: {
                uri: "@Settings.Value.MapAgentUrl"
            },
            session: "@Model.Session",
            resourceId: "@Model.WebLayout"
        });
    </script>
</body>
</html>